name: Solar System Workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "feature/*"
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

concurrency:
  group: pipeline
  cancel-in-progress: false

jobs:
  unit-testing:
    timeout-minutes: 1
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18]
        operating_system: [ubuntu-latest]
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: List Files
        run: ls

      # - name: Check if artifact exists
      #   id: check_artifact
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         run_id: ${{ github.run_id }},
      #       });
      #       const artifactExists = artifacts.data.artifacts.some(artifact => artifact.name === 'Mocha-Test-Result');
      #       return artifactExists;

      - name: Archive Test Result
        # if: ${{ steps.check_artifact.outputs.result == 'false' }}
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result
          path: test-results.xml
          retention-days: 7

  code-coverage:
    needs: unit-testing
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      - run: npm install
      - continue-on-error: true
        run: npm run coverage
      - uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

  # deploy-on-ubuntu:
  #   needs: code-coverage
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Echo Docker Details
  #       run: docker info
  #     - name: Run images
  #       run: docker run hello-world

  # deploy-on-windows:
  #   needs: code-coverage
  #   runs-on: windows-latest
  #   steps:
  #     - name: Echo Docker Details
  #       run: docker info
  #     - name: Run images
  #       run: docker run hello-world

  deploy:
    needs: code-coverage
    name: Deploy
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, windows-latest]
        images: [hello-world, alpine]
        exclude:
          - images: alpine
            os: windows-latest
        include:
          - images: amd64/alpine
            os: ubuntu-22.04
    runs-on: ${{ matrix.os }}
    steps:
      - name: Echo Docker Details
        run: docker info
      - name: Run Image on ${{ matrix.os }}
        run: docker run ${{ matrix.images }}
